'use strict';

var _ = require('lodash');
var debug = require('debug')('hdbext:middleware');
var poolModule = require('./pool');
var connOptions = require('./conn-options');

exports.middleware = function middleware(hanaService, poolOptions) {
  var hanaOptions = _.merge({}, connOptions.getGlobalOptions(), hanaService);
  var pool = poolModule.getPool(hanaOptions, poolOptions);

  return function db(req, res, next) {
    var opt = connOptions.getRequestOptions(req);
    pool.acquire(opt, function (err, client) {
      if (err) {
        err.status = 500;
        return next(err);
      }

      var releaseClient = true;
      client.once('release', function () {
        releaseClient = false;
        delete req.db;
      });

      function cleanup() {
        debug('Cleanup triggered');
        delete req.db;
        if (releaseClient) {
          releaseClient = false;
          pool.release(client);
        }
      }

      var end = res.end;
      res.end = function () {
        cleanup();
        res.end = end;
        res.end.apply(this, arguments);
      };

      req.db = client;
      next();
    });
  };
};

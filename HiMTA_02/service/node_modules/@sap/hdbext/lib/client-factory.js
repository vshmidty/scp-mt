'use strict';

var assert = require('assert');
var _ = require('lodash');
var hdb = require('hdb');
var clientSession = require('./client-session');

module.exports.createConnection = createConnection;
module.exports.openBaseConnection = openBaseConnection;


function createConnection(options, callback) {
  openBaseConnection(options, function (err, client) {
    if (err) {
      client.close();
      return callback(err);
    }
    clientSession.updateConnectionOptions(client, options, function (err) {
      if (err) {
        client.close();
        client = null;
      }
      callback(err, client);
    });
  });
}

function openBaseConnection(options, callback) {
  options = normalizeOptions(options);

  var client = hdb.createClient(options);
  client.on('error', function (err) {
    console.error('Network connection error: ', err); // eslint-disable-line no-console
  });
  client.connect(function (err) {
    callback(err, client);
  });
}

function normalizeOptions(options) {
  options = _.clone(options);

  if (!options.hosts && options.db_hosts) {
    assert(Array.isArray(options.db_hosts), 'options.db_hosts should be an array');
    options.hosts = options.db_hosts;
    delete options.db_hosts;
  }

  if (!options.ca && options.certificate) {
    options.ca = [options.certificate];
    delete options.certificate;
  }

  // hdb driver does not filter the properties passed to it
  // and 'session' property is interpreted by the 'tls' module in hdb.
  // Its value is rejected if it is not a Buffer.
  if (options.session && !Buffer.isBuffer(options.session)) {
    delete options.session;
  }

  return options;
}

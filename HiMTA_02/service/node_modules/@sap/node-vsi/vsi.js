// Copyright (c) 2018, SAP SE
// All rights reserved.
//
//
// Load bindings binary
//

var vsa = process.env['VSA_LIB'];
if (process.platform === "win32") {
   process.env['VSI_LIB'] =  __dirname + '\\deps\\win32\\' + process.arch + '\\sapvsi.dll';
   process.env['VSA_TEST'] =  __dirname + '\\deps\\win32\\' + process.arch + '\\sapcsa.dll';
   process.env['PATH'] = process.env['PATH'] + ';' + __dirname + '\\deps\\' + process.platform + '\\' + process.arch;
} else {
   if (process.platform === "darwin") {
     process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch;
     process.env['VSI_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapvsi.dylib';
     process.env['VSA_TEST'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapcsa.dylib';
   } else {
    if( process.arch === 'ppc64' ) {
        var os = require('os');
        var endianer = os.endianness().toLowerCase();
        if( endianer === 'le' ) {
            process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + endianer;
            process.env['VSI_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + endianer + '/libsapvsi.so';
            process.env['VSA_TEST'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + endianer + '/libsapcsa.so';
        } else {
            process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch;
            process.env['VSI_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapvsi.so';
            process.env['VSA_TEST'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapcsa.so';
        }
    } else {
        process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch;
        process.env['VSI_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapvsi.so';
        process.env['VSA_TEST'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapcsa.so';
    }
   }
}

if (process.sapvsilib) {
    return module.exports = process.sapvsilib;
}
var fs = require('fs'), path = require('path');

// Seed random numbers [gh-82]
Math.random();

// Look for binary for this platform
var nVersion = parseInt(process.versions.node[0],10);
var v8;
if(nVersion > 8){
  v8 = 'n' + nVersion + '-'+ /[0-9]+\.[0-9]+/.exec(process.versions.v8)[0];
} else{
  v8 = 'v8-'+ /[0-9]+\.[0-9]+/.exec(process.versions.v8)[0];
}
var modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch+ '-'+ v8, 'vsi');
if( process.arch === 'ppc64' ) {
	var os = require('os');
	var endianer = os.endianness().toLowerCase();
	if( endianer === 'le' ) {
		modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch + endianer + '-'+ v8, 'vsi');
	}
}
try {
	fs.statSync(modPath+ '.node');
} catch (ex) {
	// No binary!
	throw ex;
	//throw new Error('`'+ modPath+ '.node` is missing. Try reinstalling `node-vsi`?');
}

// Pull in VSI implementation
process.sapvsilib = module.exports = require(modPath);
